load("@k8s_deploy//:defaults.bzl", "k8s_deploy")
load("@io_bazel_rules_k8s//k8s:objects.bzl", "k8s_objects")
load("//hack/build:kustomize.bzl", "kustomization")

kustomization(
    name = "manifest",
    srcs = [":all-srcs"],
)

k8s_deploy(
    name = "operator",
    images = {
        # todo use STAMP variable here instead of the gen_rule below
        "cockroach-operator:latest": "//cmd/cockroach-operator:operator_image",
    },
    template = ":operator_image",
)

# rewrite the image: YAML stanza with cockroach-operator
# if we can figure out how to use STAMP variables we can remove this
genrule(
    name = "operator_image",
    srcs = [":operator.yaml"],
    outs = [":operator-image.yaml"],
    cmd = "$(location substitute.sh) $< $@",
    tools = [":substitute.sh"],
)

k8s_objects(
    name = "install_operator",
    objects = [
        "//config/crd:crd",
        "//config/webhook:webhook",
        ":operator",
    ],
)

filegroup(
    name = "package-srcs",
    srcs = glob(["**"]),
    tags = ["automanaged"],
    visibility = ["//visibility:private"],
)

filegroup(
    name = "all-srcs",
    srcs = [":package-srcs"],
    tags = ["automanaged"],
    visibility = ["//visibility:public"],
)
