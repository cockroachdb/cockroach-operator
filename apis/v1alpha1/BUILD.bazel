load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "go_default_library",
    srcs = [
        "action_status.go",
        "action_types.go",
        "cluster_types.go",
        "condition_types.go",
        "doc.go",
        "groupversion_info.go",
        "restart_types.go",
        "volume.go",
        "webhook.go",
        "zz_generated.deepcopy.go",
    ],
    importpath = "github.com/cockroachdb/cockroach-operator/apis/v1alpha1",
    visibility = ["//visibility:public"],
    deps = [
        "@com_github_cockroachdb_errors//:go_default_library",
        "@io_k8s_api//apps/v1:go_default_library",
        "@io_k8s_api//core/v1:go_default_library",
        "@io_k8s_apimachinery//pkg/apis/meta/v1:go_default_library",
        "@io_k8s_apimachinery//pkg/runtime:go_default_library",
        "@io_k8s_apimachinery//pkg/runtime/schema:go_default_library",
        "@io_k8s_sigs_controller_runtime//:go_default_library",
        "@io_k8s_sigs_controller_runtime//pkg/log:go_default_library",
        "@io_k8s_sigs_controller_runtime//pkg/scheme:go_default_library",
        "@io_k8s_sigs_controller_runtime//pkg/webhook:go_default_library",
    ],
)

go_test(
    name = "go_default_test",
    srcs = [
        "cluster_types_test.go",
        "volume_test.go",
        "webhook_test.go",
    ],
    deps = [
        ":go_default_library",
        "//pkg/client/clientset/versioned:go_default_library",
        "//pkg/testutil/env:go_default_library",
        "@com_github_stretchr_testify//assert:go_default_library",
        "@com_github_stretchr_testify//require:go_default_library",
        "@io_k8s_api//apps/v1:go_default_library",
        "@io_k8s_api//core/v1:go_default_library",
        "@io_k8s_apimachinery//pkg/api/errors:go_default_library",
        "@io_k8s_apimachinery//pkg/apis/meta/v1:go_default_library",
        "@io_k8s_apimachinery//pkg/runtime:go_default_library",
        "@io_k8s_apimachinery//pkg/types:go_default_library",
    ],
)

filegroup(
    name = "package-srcs",
    srcs = glob(["**"]),
    tags = ["automanaged"],
    visibility = ["//visibility:private"],
)

filegroup(
    name = "all-srcs",
    srcs = [":package-srcs"],
    tags = ["automanaged"],
    visibility = ["//visibility:public"],
)
