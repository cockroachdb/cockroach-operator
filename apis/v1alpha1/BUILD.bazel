load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "v1alpha1",
    srcs = [
        "action_status.go",
        "action_types.go",
        "cluster_defaults.go",
        "cluster_types.go",
        "condition_types.go",
        "doc.go",
        "groupversion_info.go",
        "restart_types.go",
        "volume.go",
        "zz_generated.deepcopy.go",
    ],
    importpath = "github.com/cockroachdb/cockroach-operator/apis/v1alpha1",
    visibility = ["//visibility:public"],
    deps = [
        "@com_github_pkg_errors//:errors",
        "@io_k8s_api//apps/v1:apps",
        "@io_k8s_api//core/v1:core",
        "@io_k8s_apimachinery//pkg/apis/meta/v1:meta",
        "@io_k8s_apimachinery//pkg/runtime",
        "@io_k8s_apimachinery//pkg/runtime/schema",
        "@io_k8s_sigs_controller_runtime//pkg/scheme",
    ],
)

ETCD = "//hack/bin:etcd"

go_test(
    name = "v1alpha1_test",
    srcs = [
        "cluster_defaults_test.go",
        "cluster_types_test.go",
        "suite_test.go",
        "volume_test.go",
    ],
    # TODO use these values in the unit test instead of the hardcoded values
    args = [
        "$(location //hack/bin:etcd)",
        "$(location //hack/bin:kube-apiserver)",
        "$(location //hack/bin:kubectl)",
    ],
    data = [
        "//config/crd/bases:crd_manifest",
        "//hack/bin:etcd",
        "//hack/bin:kube-apiserver",
        "//hack/bin:kubectl",
    ],
    embed = [":v1alpha1"],
    importpath = "github.com/cockroachdb/cockroach-operator/apis/v1alpha1",
    deps = [
        "//pkg/testutil/paths",
        "@com_github_google_go_cmp//cmp",
        "@com_github_onsi_ginkgo//:ginkgo",
        "@com_github_onsi_gomega//:gomega",
        "@com_github_stretchr_testify//assert",
        "@com_github_stretchr_testify//require",
        "@io_k8s_api//apps/v1:apps",
        "@io_k8s_api//core/v1:core",
        "@io_k8s_apimachinery//pkg/apis/meta/v1:meta",
        "@io_k8s_apimachinery//pkg/types",
        "@io_k8s_client_go//kubernetes/scheme",
        "@io_k8s_client_go//rest",
        "@io_k8s_sigs_controller_runtime//pkg/client",
        "@io_k8s_sigs_controller_runtime//pkg/envtest",
        "@io_k8s_sigs_controller_runtime//pkg/envtest/printer",
        "@io_k8s_sigs_controller_runtime//pkg/log",
        "@io_k8s_sigs_controller_runtime//pkg/log/zap",
        "@org_golang_x_net//context",
    ],
)

filegroup(
    name = "package-srcs",
    srcs = glob(["**"]),
    tags = ["automanaged"],
    visibility = ["//visibility:private"],
)

filegroup(
    name = "all-srcs",
    srcs = [":package-srcs"],
    tags = ["automanaged"],
    visibility = ["//visibility:public"],
)
