# gazelle:exclude verify_boilerplate_test.go

load("@io_bazel_rules_go//go:def.bzl", "go_test")

package(default_visibility = ["//visibility:public"])

GO = "@go_sdk//:bin/go"

GOROOT = "@go_sdk//:files"

GOFMT = "@go_sdk//:bin/gofmt"

JQ = "//hack/bin:jq"

FAQ = "//hack/bin:faq"

OPERATORSDK = "//hack/bin:operator-sdk"

KUSTOMIZE = "//hack/bin:kustomize"

OPM = "//hack/bin:opm"

KUBETEST2 = "//hack/bin:kubetest2"

CONTROLLER_GEN = "@io_k8s_sigs_controller_tools//cmd/controller-gen"

sh_binary(
    name = "update-codegen",
    srcs = ["update-codegen.sh"],
    args = [
        "$(location %s)" % GO,
        "$(location @io_k8s_code_generator//cmd/client-gen)",
        "$(location @io_k8s_code_generator//cmd/deepcopy-gen)",
        "$(location @io_k8s_code_generator//cmd/informer-gen)",
        "$(location @io_k8s_code_generator//cmd/lister-gen)",
        "$(location @io_k8s_code_generator//cmd/defaulter-gen)",
        "$(location @io_k8s_code_generator//cmd/conversion-gen)",
    ],
    data = [
        GO,
        GOROOT,
        "@io_k8s_code_generator//cmd/client-gen",
        "@io_k8s_code_generator//cmd/conversion-gen",
        "@io_k8s_code_generator//cmd/deepcopy-gen",
        "@io_k8s_code_generator//cmd/defaulter-gen",
        "@io_k8s_code_generator//cmd/informer-gen",
        "@io_k8s_code_generator//cmd/lister-gen",
    ],
)

sh_test(
    name = "verify-codegen",
    srcs = ["verify-codegen.sh"],
    args = [
        "$(location :update-codegen)",
        "$(location %s)" % GO,
        "$(location @io_k8s_code_generator//cmd/client-gen)",
        "$(location @io_k8s_code_generator//cmd/deepcopy-gen)",
        "$(location @io_k8s_code_generator//cmd/informer-gen)",
        "$(location @io_k8s_code_generator//cmd/lister-gen)",
        "$(location @io_k8s_code_generator//cmd/defaulter-gen)",
        "$(location @io_k8s_code_generator//cmd/conversion-gen)",
    ],
    data = [
        ":update-codegen",
        GO,
        GOROOT,
        "@//:all-srcs",
        "@io_k8s_code_generator//cmd/client-gen",
        "@io_k8s_code_generator//cmd/conversion-gen",
        "@io_k8s_code_generator//cmd/deepcopy-gen",
        "@io_k8s_code_generator//cmd/defaulter-gen",
        "@io_k8s_code_generator//cmd/informer-gen",
        "@io_k8s_code_generator//cmd/lister-gen",
    ],
)

sh_test(
    name = "verify-crds",
    srcs = ["verify-crds.sh"],
    args = [
        "$(location %s)" % GO,
        "$(location %s)" % CONTROLLER_GEN,
    ],
    data = [
        GO,
        CONTROLLER_GEN,
        "@//:all-srcs",
    ],
)

sh_test(
    name = "verify-gofmt",
    srcs = ["//hack/bin:gofmt"],
    args = [
        "-s",
        "-d",
        "./",
    ],
    data = ["@//:all-srcs"],
)

sh_test(
    name = "verify-golangci-lint",
    srcs = ["//hack/bin:golangci-lint"],
    args = [
        "run",
        "--config .golangci.yaml",
        "--timeout 5m",
    ],
    data = ["@//:all-srcs"],
    env = {
        "GOLANGCI_LINT_CACHE": "/tmp/ci_lint_cache",
        "XDG_CACHE_HOME": "/tmp/xdgcache",
        "GOPATH": "/tmp/gopath",
        "GOCACHE": "/tmp/gocache",
    },
)

sh_binary(
    name = "bundle",
    srcs = ["bundle.sh"],
    data = [
        OPERATORSDK,
        KUSTOMIZE,
        OPM,
        FAQ,
        "@//:all-srcs",
    ],
)

filegroup(
    name = "package-srcs",
    srcs = glob(["**"]),
    tags = ["automanaged"],
    visibility = ["//visibility:private"],
)

filegroup(
    name = "all-srcs",
    srcs = [
        ":package-srcs",
        "//hack/bin:all-srcs",
        "//hack/boilerplate:all-srcs",
        "//hack/build:all-srcs",
        "//hack/crdbversions:all-srcs",
        "//hack/gke:all-srcs",
        "//hack/k8s:all-srcs",
        "//hack/release:all-srcs",
        "//hack/smoketest:all-srcs",
        "//hack/update_crdb_versions:all-srcs",
    ],
    tags = ["automanaged"],
    visibility = ["//visibility:public"],
)

go_test(
    name = "verify-boilerplates",
    srcs = ["verify_boilerplate_test.go"],
    data = [
        "@//:all-srcs",
    ],
    deps = ["//pkg/testutil:go_default_library"],
)
