load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "actor",
    srcs = [
        "actor.go",
        "cluster_restart.go",
        "context.go",
        "decommission.go",
        "deploy.go",
        "generate_cert.go",
        "initialize.go",
        "partitioned_update.go",
        "resize_pvc.go",
        "validate_version.go",
    ],
    importpath = "github.com/cockroachdb/cockroach-operator/pkg/actor",
    visibility = ["//visibility:public"],
    deps = [
        "//apis/v1alpha1",
        "//pkg/clustersql",
        "//pkg/condition",
        "//pkg/database",
        "//pkg/features",
        "//pkg/healthchecker",
        "//pkg/kube",
        "//pkg/ptr",
        "//pkg/resource",
        "//pkg/scale",
        "//pkg/security",
        "//pkg/update",
        "//pkg/util",
        "//pkg/utilfeature",
        "@com_github_cenkalti_backoff//:backoff",
        "@com_github_cockroachdb_errors//:errors",
        "@com_github_go_logr_logr//:logr",
        "@com_github_masterminds_semver_v3//:semver",
        "@com_github_pkg_errors//:errors",
        "@io_k8s_api//apps/v1:apps",
        "@io_k8s_api//batch/v1:batch",
        "@io_k8s_api//core/v1:core",
        "@io_k8s_apimachinery//pkg/api/errors",
        "@io_k8s_apimachinery//pkg/apis/meta/v1:meta",
        "@io_k8s_apimachinery//pkg/labels",
        "@io_k8s_apimachinery//pkg/runtime",
        "@io_k8s_apimachinery//pkg/types",
        "@io_k8s_client_go//kubernetes",
        "@io_k8s_client_go//rest",
        "@io_k8s_client_go//util/retry",
        "@io_k8s_sigs_controller_runtime//pkg/client",
        "@io_k8s_sigs_controller_runtime//pkg/log",
        "@org_uber_go_zap//zapcore",
    ],
)

go_test(
    name = "actor_test",
    srcs = [
        "actor_test.go",
        "cluster_restart_test.go",
        "decommission_test.go",
        "deploy_test.go",
        "export_test.go",
        "partitioned_update_test.go",
    ],
    embed = [":actor"],
    deps = [
        "//apis/v1alpha1",
        "//pkg/features",
        "//pkg/kube",
        "//pkg/testutil",
        "//pkg/utilfeature",
        "@com_github_go_logr_logr//:logr",
        "@com_github_go_logr_zapr//:zapr",
        "@com_github_pkg_errors//:errors",
        "@com_github_stretchr_testify//assert",
        "@com_github_stretchr_testify//require",
        "@io_k8s_api//apps/v1:apps",
        "@io_k8s_api//core/v1:core",
        "@io_k8s_apimachinery//pkg/apis/meta/v1:meta",
        "@io_k8s_apimachinery//pkg/runtime",
        "@io_k8s_apimachinery//pkg/runtime/schema",
        "@io_k8s_client_go//kubernetes/fake",
        "@io_k8s_client_go//testing",
        "@io_k8s_sigs_controller_runtime//pkg/client/fake",
        "@org_uber_go_zap//zaptest",
    ],
)

filegroup(
    name = "package-srcs",
    srcs = glob(["**"]),
    tags = ["automanaged"],
    visibility = ["//visibility:private"],
)

filegroup(
    name = "all-srcs",
    srcs = [":package-srcs"],
    tags = ["automanaged"],
    visibility = ["//visibility:public"],
)
