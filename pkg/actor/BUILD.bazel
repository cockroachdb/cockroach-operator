load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "go_default_library",
    srcs = [
        "actor.go",
        "context.go",
        "deploy.go",
        "initialize.go",
        "partitioned_update.go",
        "request_cert.go",
        "upgrade.go",
    ],
    importpath = "github.com/cockroachdb/cockroach-operator/pkg/actor",
    visibility = ["//visibility:public"],
    deps = [
        "//api/v1alpha1:go_default_library",
        "//pkg/condition:go_default_library",
        "//pkg/database:go_default_library",
        "//pkg/features:go_default_library",
        "//pkg/kube:go_default_library",
        "//pkg/resource:go_default_library",
        "//pkg/tls:go_default_library",
        "//pkg/update:go_default_library",
        "//pkg/utilfeature:go_default_library",
        "@com_github_go_logr_logr//:go_default_library",
        "@com_github_masterminds_semver_v3//:go_default_library",
        "@com_github_pkg_errors//:go_default_library",
        "@io_k8s_api//apps/v1:go_default_library",
        "@io_k8s_api//certificates/v1beta1:go_default_library",
        "@io_k8s_apimachinery//pkg/runtime:go_default_library",
        "@io_k8s_apimachinery//pkg/types:go_default_library",
        "@io_k8s_client_go//kubernetes:go_default_library",
        "@io_k8s_client_go//rest:go_default_library",
        "@io_k8s_sigs_controller_runtime//pkg/client:go_default_library",
        "@io_k8s_sigs_controller_runtime//pkg/log:go_default_library",
    ],
)

go_test(
    name = "go_default_test",
    srcs = [
        "deploy_test.go",
        "export_test.go",
        "partitioned_update_test.go",
    ],
    embed = [":go_default_library"],
    deps = [
        "//pkg/testutil:go_default_library",
        "@com_github_go_logr_zapr//:go_default_library",
        "@com_github_pkg_errors//:go_default_library",
        "@com_github_stretchr_testify//assert:go_default_library",
        "@com_github_stretchr_testify//require:go_default_library",
        "@org_uber_go_zap//zaptest:go_default_library",
    ],
)

filegroup(
    name = "package-srcs",
    srcs = glob(["**"]),
    tags = ["automanaged"],
    visibility = ["//visibility:private"],
)

filegroup(
    name = "all-srcs",
    srcs = [":package-srcs"],
    tags = ["automanaged"],
    visibility = ["//visibility:public"],
)
