load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "testutil",
    srcs = [
        "assert.go",
        "builder.go",
        "cmp.go",
        "fake.go",
        "helpers.go",
        "require.go",
        "retry.go",
        "steps.go",
        "validate_headers.go",
    ],
    importpath = "github.com/cockroachdb/cockroach-operator/pkg/testutil",
    visibility = ["//visibility:public"],
    deps = [
        "//apis/v1alpha1",
        "//pkg/database",
        "//pkg/kube",
        "//pkg/labels",
        "//pkg/resource",
        "//pkg/testutil/env",
        "@com_github_google_go_cmp//cmp",
        "@com_github_google_go_cmp//cmp/cmpopts",
        "@com_github_pkg_errors//:errors",
        "@com_github_stretchr_testify//require",
        "@io_k8s_api//apps/v1:apps",
        "@io_k8s_api//core/v1:core",
        "@io_k8s_apimachinery//pkg/api/errors",
        "@io_k8s_apimachinery//pkg/api/meta",
        "@io_k8s_apimachinery//pkg/api/resource",
        "@io_k8s_apimachinery//pkg/apis/meta/v1:meta",
        "@io_k8s_apimachinery//pkg/runtime",
        "@io_k8s_apimachinery//pkg/runtime/schema",
        "@io_k8s_apimachinery//pkg/runtime/serializer",
        "@io_k8s_apimachinery//pkg/types",
        "@io_k8s_apimachinery//pkg/util/wait",
        "@io_k8s_client_go//kubernetes",
        "@io_k8s_client_go//kubernetes/scheme",
        "@io_k8s_sigs_controller_runtime//pkg/client",
        "@io_k8s_sigs_controller_runtime//pkg/client/apiutil",
        "@io_k8s_sigs_controller_runtime//pkg/client/fake",
    ],
)

filegroup(
    name = "package-srcs",
    srcs = glob(["**"]),
    tags = ["automanaged"],
    visibility = ["//visibility:private"],
)

filegroup(
    name = "all-srcs",
    srcs = [
        ":package-srcs",
        "//pkg/testutil/env:all-srcs",
        "//pkg/testutil/exec:all-srcs",
        "//pkg/testutil/paths:all-srcs",
    ],
    tags = ["automanaged"],
    visibility = ["//visibility:public"],
)

go_test(
    name = "testutil_test",
    srcs = ["validate_headers_test.go"],
    data = glob(["testdata/**"]),
    embed = [":testutil"],
)

go_test(
    name = "go_default_test",
    srcs = ["validate_headers_test.go"],
    data = glob(["testdata/**"]),
    embed = [":testutil"],
)
