apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    crdb.io/containerimage: ""
    crdb.io/version: ""
  creationTimestamp: null
  name: test-cluster
spec:
  podManagementPolicy: OrderedReady
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: database
      app.kubernetes.io/instance: test-cluster
      app.kubernetes.io/name: cockroachdb
  serviceName: test-cluster
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: database
        app.kubernetes.io/instance: test-cluster
        app.kubernetes.io/name: cockroachdb
    spec:
      automountServiceAccountToken: false
      containers:
      - args:
        - start
        - --join=test-cluster-0.test-cluster.test-ns:26258
        - --advertise-host=$(POD_NAME).test-cluster.test-ns
        - --logtostderr=INFO
        - --insecure
        - --http-port=8080
        - --cache=25%
        - --max-sql-memory=25%
        - --sql-addr=:26257
        - --listen-addr=:26258
        command:
        - /cockroach/cockroach.sh
        env:
        - name: COCKROACH_CHANNEL
          value: kubernetes-operator
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        image: cockroachdb/cockroach:v20.2.7
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /health
            port: http
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 5
        name: db
        ports:
        - containerPort: 26258
          name: grpc
          protocol: TCP
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 26257
          name: sql
          protocol: TCP
        readinessProbe:
          failureThreshold: 2
          httpGet:
            path: /health?ready=1
            port: http
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 5
        resources: {}
        volumeMounts:
        - mountPath: /cockroach/cockroach-data/
          name: datadir
      securityContext:
        fsGroup: 10001
        runAsUser: 10001
      serviceAccountName: cockroach-database-sa
      terminationGracePeriodSeconds: 60
      volumes:
      - name: datadir
        persistentVolumeClaim:
          claimName: ""
      initContainers:
        - command:
          - /bin/sh
          - -c
          - '>- cp -p /cockroach/cockroach-certs-prestage/..data/* /cockroach/cockroach-certs/
            && chmod 700 /cockroach/cockroach-certs/*.key && chown 10001:10001 /cockroach/cockroach-certs/*.key'
          image: cockroachdb/cockroach:v20.2.7
          imagePullPolicy: IfNotPresent
          name: db-init
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            runAsUser: 0
  updateStrategy:
    rollingUpdate: {}
  securityContext:
    fsGroup: 10001
    runAsUser: 10001
  volumeClaimTemplates:
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi
      volumeMode: Filesystem
status:
  replicas: 0
