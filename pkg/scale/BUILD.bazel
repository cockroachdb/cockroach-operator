load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "scale",
    srcs = [
        "cockroach_statefulset.go",
        "drainer.go",
        "executor.go",
        "persistent_volume_pruner.go",
        "scale.go",
    ],
    importpath = "github.com/cockroachdb/cockroach-operator/pkg/scale",
    visibility = ["//visibility:public"],
    deps = [
        "@com_github_cenkalti_backoff//:backoff",
        "@com_github_cockroachdb_errors//:errors",
        "@com_github_go_logr_logr//:logr",
        "@io_k8s_api//apps/v1:apps",
        "@io_k8s_api//autoscaling/v1:autoscaling",
        "@io_k8s_api//core/v1:core",
        "@io_k8s_apimachinery//pkg/apis/meta/v1:meta",
        "@io_k8s_apimachinery//pkg/labels",
        "@io_k8s_apimachinery//pkg/watch",
        "@io_k8s_client_go//kubernetes",
        "@io_k8s_client_go//kubernetes/scheme",
        "@io_k8s_client_go//rest",
        "@io_k8s_client_go//tools/remotecommand",
        "@org_uber_go_zap//zapcore",
    ],
)

go_test(
    name = "scale_test",
    srcs = [
        "cockroach_statefulset_test.go",
        "persistent_volume_pruner_test.go",
    ],
    embed = [":scale"],
    deps = [
        "@com_github_go_logr_logr//:logr",
        "@com_github_go_logr_logr//testing",
        "@com_github_stretchr_testify//require",
        "@io_k8s_api//apps/v1:apps",
        "@io_k8s_api//core/v1:core",
        "@io_k8s_apimachinery//pkg/apis/meta/v1:meta",
        "@io_k8s_apimachinery//pkg/runtime",
        "@io_k8s_apimachinery//pkg/runtime/schema",
        "@io_k8s_apimachinery//pkg/watch",
        "@io_k8s_client_go//kubernetes/fake",
        "@io_k8s_client_go//testing",
    ],
)

filegroup(
    name = "package-srcs",
    srcs = glob(["**"]),
    tags = ["automanaged"],
    visibility = ["//visibility:private"],
)

filegroup(
    name = "all-srcs",
    srcs = [":package-srcs"],
    tags = ["automanaged"],
    visibility = ["//visibility:public"],
)
