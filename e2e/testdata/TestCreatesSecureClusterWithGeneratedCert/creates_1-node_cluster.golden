---
apiVersion: crdb.cockroachlabs.com/v1alpha1
kind: CrdbCluster
metadata:
  name: crdb
spec:
  dataStore:
    pvc:
      source:
        claimName: ""
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: "1Gi"
        volumeMode: Filesystem
    supportsAutoResize: false
  image:
    name: cockroachdb/cockroach:v19.2.6
  nodeTLSSecret: GENERATED
  nodes: 1
  tlsEnabled: true

---
apiVersion: v1
kind: Pod
metadata:
  labels:
    app.kubernetes.io/component: database
    app.kubernetes.io/instance: crdb
    app.kubernetes.io/name: cockroachdb
    statefulset.kubernetes.io/pod-name: crdb-0
  name: crdb-0
spec:
  containers:
  - args:
    - shell
    - -ecx
    - '>- exec /cockroach/cockroach start --join=crdb-0.crdb.[sandbox_namespace]:26257
      --advertise-host=$(hostname -f) --logtostderr=INFO --certs-dir=/cockroach/cockroach-certs/
      --http-port=8080 --port=26257 --cache=25% --max-sql-memory=25%'
    env:
    - name: COCKROACH_CHANNEL
      value: kubernetes-helm
    image: cockroachdb/cockroach:v19.2.6
    imagePullPolicy: IfNotPresent
    livenessProbe:
      failureThreshold: 3
      httpGet:
        path: /health
        port: http
        scheme: HTTPS
      initialDelaySeconds: 30
      periodSeconds: 5
      successThreshold: 1
      timeoutSeconds: 1
    name: db
    ports:
    - containerPort: 26257
      name: grpc
      protocol: TCP
    - containerPort: 8080
      name: http
      protocol: TCP
    readinessProbe:
      failureThreshold: 2
      httpGet:
        path: /health?ready=1
        port: http
        scheme: HTTPS
      initialDelaySeconds: 10
      periodSeconds: 5
      successThreshold: 1
      timeoutSeconds: 1
    resources: {}
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /cockroach/cockroach-data/
      name: datadir
    - mountPath: /cockroach/cockroach-certs/
      name: certs
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: cockroach-database-sa
  serviceAccountName: cockroach-database-sa
  subdomain: crdb
  terminationGracePeriodSeconds: 60
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - name: datadir
    persistentVolumeClaim:
      claimName: ""
  - name: certs
    projected:
      defaultMode: 256
      sources:
      - secret:
          items:
          - key: ca.crt
            path: ca.crt
          - key: tls.crt
            path: node.crt
          - key: tls.key
            path: node.key
          name: crdb-node
      - secret:
          items:
          - key: tls.crt
            path: client.root.crt
          - key: tls.key
            path: client.root.key
          name: crdb-root

---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURERENDQWZTZ0F3SUJBZ0lSQUxEU24xYXhkU2I0bkYvSUNuMGpUZUl3RFFZSktvWklodmNOQVFFTEJRQXcKTHpFdE1Dc0dBMVVFQXhNa01UYzVPR0V4TnpNdFkyUmpNQzAwT0RnekxUZ3paV1l0T0RjME4yWTJORGRrTkdFdwpNQjRYRFRJd01ETXdOVEl3TVRFek9Wb1hEVEkxTURNd05ESXhNVEV6T1Zvd0x6RXRNQ3NHQTFVRUF4TWtNVGM1Ck9HRXhOek10WTJSak1DMDBPRGd6TFRnelpXWXRPRGMwTjJZMk5EZGtOR0V3TUlJQklqQU5CZ2txaGtpRzl3MEIKQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBa3ZSdkpxenBRTjQrbU9TeklBekhoeitnZCtHekJ3RDdWYzVZNkpkZwpRbFF3ZUx4Q0p4Z1NvdU1oWnJLZHlYWVI4SEVJbWtBS2svWEFCM3pnYnhIanprSEVJSDNtdjRiNkx6dnVOWnM5CnBETTgzbVNBTFRKd3cvMnhidENjYjJxa3lOVENhUy9JMnJKeVZTRzJ1ZzAzdFJhS002eVpmTGtrWnd6TUxUTVgKbHhRek5yVndkUGhvT2IxckJTMDJtRnVmYmhnd1FEa1Z5cTNpZFVVNGJHRUF0ZUZYM0tZZ3U3UnlEMktSc1ZTMgphWjdza0U3T3AvbUl4VmpKWXQrVnZTa2p1RHQvRWRXMjNNSC84RTJWdEdyWE5nT0J4bmtYVXAwNUpKV1VFSDEzCkJHajgxSkE3blIrc2Q0ZDZJU0RURHM2RXN4eDZ6QWdjaU5QclpHS3l3Y1p4U1FJREFRQUJveU13SVRBT0JnTlYKSFE4QkFmOEVCQU1DQWdRd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQQpQZ05uZDZpUTZlMzYzM3V1S0puODBKV2srN3BUZExHRHlIK2RsYkh6cWYvV3Fpa1g5K1R0S2dyYngxVzBSdzczClhXaXBmK2VURmpHeFZ2dGovK3o1MXhEQmlJSG1za1ZnWk84RnpJeHlVYzI1ckk1OTBqNW9COHFPdFJBeHk2c0MKaXVVc0tVTDR0a0hqOEszWjh5b01CakxkZkNKY2xVVjI3ZmJLZnVCYUU2dEZBTFZNMTMrMmJodThYc2ZhQ1ZyRQpDZUorYjZ5M3VSUHNkS1RvVmlLdDJBWUxzQ2kvTllma0Exd0VIL284cm1QMXozZDFzZWwyNlFkWm9CVCtnaUF6CjhiSlNTeXZXTStIa01TNEpnSFJBS1djdVJyNnp3dE9Pck1RVGsyMDloTlFyUjhkYzFhUVl6QlVsQ2k3K25TQzcKRTlHZUxsUVBpMEtMQnFTQUFmb2EvZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUV1akNDQTZLZ0F3SUJBZ0lSQUtlV1lIVi9NNUNVK1JML2dWUERsVUV3RFFZSktvWklodmNOQVFFTEJRQXcKTHpFdE1Dc0dBMVVFQXhNa01UYzVPR0V4TnpNdFkyUmpNQzAwT0RnekxUZ3paV1l0T0RjME4yWTJORGRrTkdFdwpNQjRYRFRJd01EVXdNakF3TURBeE1sb1hEVEkxTURVd01UQXdNREF4TWxvd0tERVhNQlVHQTFVRUNoTU9RMjlqCmEzSnZZV05vSUV4aFluTXhEVEFMQmdOVkJBTVRCRzV2WkdVd2dnSWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUMKRHdBd2dnSUtBb0lDQVFDNHovU0JUbXJqVHljMDhyWWRoUnZoNjcxaGt2dm0xZkNLQm4yS1owWGowcDB6dExJNAp4bUR1QlptbllTa0VFcTlRSlVxeVFvRDAwNVBDTWRTS05RRHovUDM1MnhaR09nTktacGNZZ3NwQVU1TUVLRFJoClNJaFUrYS8wRlVUTzBiTXpNWjVFaGNQeUoxb3NERUVpTGpwNnA1NzdTZjJvaXR6ZFlRRzA5b3lEUlVmRUlPQ1oKdDdFNWVhMkYyNGdOU0dJdGVNRm5CeWszVmVsU0FRdGJES1c5eTlYc1FXamoveU5FbUJBTGlrY2ZQSXhPNXlXaQpFdEU0MWRDai9XaE01bG8xQXVtRkFVekc4NjZvRUlSeFkxdFgvVnZZU09RaklUUFFHTktBWVAyV09YVmtWbnptCndNVVBjNTlyZ0Y3ZXZiWEVFR2RNVXRBY1V6RS9zQ0RmVWczbTZsNWE2WmxZSEJlNE1hcW1sMGwvb01UMkxxK3QKV3FQVHdlS3VWS2p5U3N2VGp2WVVXMGh6T3lDV05TUUt4V0xnVWVyRVR1YmIrMFd1Q1lpMXVtMUNnU2hOanhsdwpwazYxSGx4WHBpUnI4a1dGVENWKzdhVU9LTGtqenY5NjRJeVFUQ0plRjFxMGNTV2dlMUtzY1pSSU5lWG9vdWxHCkxGTUE0aFhINlZ4a0FuNjF2ZmY2OEZsYVJteVJKRGVXaXVlU3FoWlJIOEQwRVI1M2c3S2lPRW1WQXRacDRNMlkKTURWV3krczNvYWorK0p2bWY0OHVNRHlGcGJheis2ZnI1bzJQOHpRRmw4WU1MRjFwelp0YklJMVIvWmJvMjZueApmYmJBQ1Q2S3RCWmh5WWJ3bW5yTWtrbzZLNitNTHRtcEhTWmZwRnVJM0hOK1EveHM3Y3g2dXZSOTRRSURBUUFCCm80SFhNSUhVTUF3R0ExVWRFd0VCL3dRQ01BQXdnY01HQTFVZEVRU0J1ekNCdUlJSmJHOWpZV3hvYjNOMGdndGoKY21SaUxYQjFZbXhwWTRJY1kzSmtZaTF3ZFdKc2FXTXVZM0prWWkxMFpYTjBMV3RqZW10eFpJSXVZM0prWWkxdwpkV0pzYVdNdVkzSmtZaTEwWlhOMExXdGplbXR4WkM1emRtTXVZMngxYzNSbGNpNXNiMk5oYklJR0tpNWpjbVJpCmdoY3FMbU55WkdJdVkzSmtZaTEwWlhOMExXdGplbXR4WklJcEtpNWpjbVJpTG1OeVpHSXRkR1Z6ZEMxclkzcHIKY1dRdWMzWmpMbU5zZFhOMFpYSXViRzlqWVd5SEJIOEFBQUV3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUYvQwptNENId0tZdHAzU2ZKVWJxSWo2Yy9ycjhFNFVDU3NWdTIrQktyOGZiODV3OTNTVC9TYmdvTWhpaGVnSDc3bTQyClY0azdNelR5WUNOMkhoVEEvWE80NWlDcU9KRGdZWDlyLzVvMzhiWW4rZ2k2WjRRQWtieFBVczN1MHFmVWs3RUMKaTA0cGFNUVdteWVwVnFQcmp5aUtGSDNUOENnR28vUW1yYWkxMTVoSjRhelJ3S1E2WTNDYVYrY2FZbVRDUlFaRQo2blZXTVlHckI0RXdXNW14OU9XRGdneXcwekxKQXFEQmE5UnFOa3UxeFN2eS94QTRHb3ovcU80SmVoYU5ydDFhCkE3eTdoL09uZitLR01BdUVrcnZQVW9CRm9TWStHa0tMTitvUUN5QWVzRVJqb3F4aHVQbEo3dGlEUVBtaW42YjUKL2xQTHNqa1ZuNHp6MmI0MlUwbz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS1FJQkFBS0NBZ0VBdU0vMGdVNXE0MDhuTlBLMkhZVWI0ZXU5WVpMNzV0WHdpZ1o5aW1kRjQ5S2RNN1N5Ck9NWmc3Z1dacDJFcEJCS3ZVQ1ZLc2tLQTlOT1R3akhVaWpVQTgvejkrZHNXUmpvRFNtYVhHSUxLUUZPVEJDZzAKWVVpSVZQbXY5QlZFenRHek16R2VSSVhEOGlkYUxBeEJJaTQ2ZXFlZSswbjlxSXJjM1dFQnRQYU1nMFZIeENEZwptYmV4T1htdGhkdUlEVWhpTFhqQlp3Y3BOMVhwVWdFTFd3eWx2Y3ZWN0VGbzQvOGpSSmdRQzRwSEh6eU1UdWNsCm9oTFJPTlhRby8xb1RPWmFOUUxwaFFGTXh2T3VxQkNFY1dOYlYvMWIyRWprSXlFejBCalNnR0Q5bGpsMVpGWjgKNXNERkQzT2ZhNEJlM3IyMXhCQm5URkxRSEZNeFA3QWczMUlONXVwZVd1bVpXQndYdURHcXBwZEpmNkRFOWk2dgpyVnFqMDhIaXJsU284a3JMMDQ3MkZGdEljenNnbGpVa0NzVmk0RkhxeEU3bTIvdEZyZ21JdGJwdFFvRW9UWThaCmNLWk90UjVjVjZZa2EvSkZoVXdsZnUybERpaTVJODcvZXVDTWtFd2lYaGRhdEhFbG9IdFNySEdVU0RYbDZLTHAKUml4VEFPSVZ4K2xjWkFKK3RiMzMrdkJaV2tac2tTUTNsb3Jua3FvV1VSL0E5QkVlZDRPeW9qaEpsUUxXYWVETgptREExVnN2ck42R28vdmliNW4rUExqQThoYVcycy91bjYrYU5qL00wQlpmR0RDeGRhYzJiV3lDTlVmMlc2TnVwCjhYMjJ3QWsraXJRV1ljbUc4SnA2ekpKS09pdXZqQzdacVIwbVg2UmJpTnh6ZmtQOGJPM01lcnIwZmVFQ0F3RUEKQVFLQ0FnRUFzd0pDaTJqZ1laSk9vSnVqU0k2Z3hrQ243RFlKcHJwOHhjU3Bud0NQRXEvek1wMElyN04vT2EzVQorZXBEWnoyTjcreGZJTEVINVp4MkYzaGFyUS9QLzRTQ29KdlVSR3QydW44S1JXU1I4S0xDMlJqME8zS2RFdW5TCnczSkNkcTFwak9HM3NobDdCVGVXd09tUndVRFR4ZkJNTG95cGxMSUVZcTNPa0hEckEwOTh4djB0YjljY1kxWjMKZkJ0NitacXQ5ZXRzTVpZZkZ3a3crUXduNnFZaWQrZFRLd2JrU1VyYzUxaisyWjZ6YXc4anZGMXA5MFdRd0NOaQpkeVZCL0pKMnQ3ZzlabVl1N3Rvang0aFFNT0FUSHZRNkhSSGxZQjJONlRmUjFTV2RHd0JHczh5T0tKaDVoNUR2CnpwbkZ5cXdvdm1OQkd3MXZwSy8wR1FOSm8rWC9yWS9NUk5WbUJDQXFZQUYxU281U3lFN21jVHZzRjRrLzZJQ0YKWEtwc1FpOGZtaS9nZkxLS3hLbzU4cGpOcXFWZEo5djRsWGRjUmxUaWR6NjhNL04zYjh3eVJhcmVVZ1FrcEZ4OApXYUg3dVAvei9MV0VadVU4K044Q2VNbGRTVHJHYmtpVTRtcjJ5VjFVTnU3TjAwZ3UzclJTQ3UvbTlvZldFMmhNCmRqS0RWMWJTNWRldHdEcHo5M0x0TytFMWgzU2F2UEM3SUwrWkYzbTBNMVRZVDdXblcycnU2azlCdW81YzVobG4KRUVhSHpaRzM1Y3FSc1AxRk1wQ1ByODlTenMrQUdBSkZVbVhlYlFxZVZsczc0cGZJUzVUWkI1Mlg0b0dLLzFnVgo0aFRVc3JRZEJSR0hpbFZMOWJRSEVIVHhDQ3JkNzkzTWJiSVp4YjQzK2FmbWJZREVSaDBDZ2dFQkFNcC9KZXdqCnNEYm9DNHZVb0ZsbUNQWnA4TGIzekE2d1RlUjMzT2dqaU41TEZITmN6ZTZpMWhRcUJHQWZMOTZaU2dBQXVNRHQKNU5UamxkZ2g2SS9UcjNrUFVoOXRaQTUzWDJOeVBlNCtva1dLK3FmaFM0VlJscmxOM3BpaXBRWG5VQlFiTnBLRwp3MWxNalphMjdpdkN1OTlxS2Fqa1lmNXllODQrY1Z5ZzBMR0dxcW51U1NoNUp5b3lMME1sbzNDNUVvczlDdndLCm5nY3lxczRUNWNxUTFMbFhVYWVtekdpTWNpWG55SlNmV21GRjFCcWxuUjMrRXF5VjFIRTBKR1FzdkgzUjUyaGYKVXZheXJ5d3o1LzZybEExemxjWWE4MVRKK1BZOFJEc1VXWXlWSWt2ZzdpK0hGTlFOdzE1Uk9JcWoxbW52ditOMwpuK3g3cVdBMU5wTWowZjhDZ2dFQkFPbWtvOExhNlBiWURuUGhVd1k3N3ViSjIrNmIyNjExa2hFSHE1R1FIK1ZQCnJIMkdkS0hvR1NoZlIxemxZcFlBcXF0THpKWVJSTHlsc1RqUDVmTVE5eGQyWHZkRW1IRVZQN2JqQnNJNFlFMWUKVWZkZHo4Z3R5cG11Zzd2bHZFWUtoL1o5WUhSNFRHVmRXb1Vmd09rQW1veDYzcTNPbmFJNzI4RHNOTHNEN00zYQpSQ1lIcTV3V0pyZkNheVVUL3VDcUpod2hYT2ZyQ25UTyt4eHJGK3JpWXNHc1p3bEE0NkUwY29hNDF2K3VQUXJJCk95d2FucWw4aE9GQXg0cWFYM3N3SmMrOHpDUDRDZTQ2VTNzQnJZMmlxOG9ybzJ4NTQzd3BGY1E3RFlXd0k2Nm0KdStrOHlabnJDZU1KSmQ5Q1JyQVA0MGRBbDJrNE80aFFQdE01dFAxQjhCOENnZ0VCQUpDdTdIK2V1RWRpNE8wVwpEVVFTL1pCaS9aVWQxSFVpVDJWUXAweE9KM3I5RmkyZlA1eWtTR1c3NThodVFCdkNWdmROakxSOHhhVyt2cy9nCjJuUDVna1R6UjNBaER2NnZHRDdMMzZnY3BJRWYzaHlaZ3daTTEyNnJUc0tzWTFDbWg3YjJBcllMQ0FVRUI1NksKTWY2ZWN2SWN2b3RvTXdSRTlHVFdoTlQwS21qTm1aODFISnlJaEExSU1qQzk4ZHVXd01NdjZHdFJncndOM2JERQowc2s3Vm1MZkd2NjQxUkJXV1REd1BZYkRuU1luYUhkcG9hdE9ZRFZrRUppWjh1NkljRjFOM3hQYUdFTWdSTDFHCmtScUxxWXM2N09iUlZzOWNTRUJYcTBDek41Q1U5aDVWSnBwYTMrenJzSTN4Wm43WXRWaVg3dmt0L2R4UU55TUEKb20vYmhpMENnZ0VBYUJwc3dUaXJEcm1NRHdQNTYxQXZEWFFwNDdKY2VuaGxZZU1xQmd6U3VXajdzVjZFZjFPYwpTZ25TRVVrLzJSaG84elF0N3p1NGhkbktFa2RIN1RyRTdoWlhFQlBuWEpPY05SQUpCZWI2dWQ1cDVTOU9rcUljCm9NZEtlU0ZPOTJKZjNHdFcyKzV5RThRNXZoRTg4bFRMaUFhRFM2eEJQblV2WUZHZTJTbFJqUk5ReENVc3lMcHgKKy9UTHF0U3kvMFd3LzEyNk9MZllpOTFocy9MZjBFK1lzelR2SUFkaXBZUnA5eTlLMU5lODZSMzRoNWxBMHNIaApyMEFlNk5vSjZ5aXo0RkQrSUpTM1VBZDdCTmJsanJOSm1pWkJoZWIxZm5BTCs4aFlLUlluZi8xWXd2N0wwU0lSCjRMQkZ5S21PTjRxTXVVWEZjU09XR3hHdVBJMTg0RTlOL3dLQ0FRQUl3WHZBMDdiMUUydHNLZnc5dlM3S0h0d2QKNEx3Yjd5Q0lEOGlBd2dHVGtDcWhpbEVrR1BCdGdjcm1vVCtDK240c0pQTWltQXhCYnpkcEVYcUNGc1pUSXpnSApSc1lnNkxBRStET3YwOXFONDBVaUZhUFZDZW02ZWZpUWVjemRIRHlZUWhJVEhtUmpMMHRObWdWVU9UMEVtY3hQCmdHS0ZtcEsyTFZ0Y1VwdDVWZ1MrazZtNzNXVWtheXUwY0llc2lHUTFoa2NBU1pBVy8wQzdQVGpxOVZ4QXN5TlgKdkdCVWZkb1J2R0daTzJJUWFBQTdkTzFqK1Q1M3RxcmcrUkFIMjFIeCtJclMxY2VHbzBQS2Y5NGNac3JqalBEawpNVWRncWcrUEU0NjhWSEpKelowazBDTjB0eW9Pdml0Y1NTWVZIME9vb3NKZnpLcUsyVkxpdGRza3hETkgKLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K
kind: Secret
metadata:
  name: crdb-node
type: Opaque

---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURERENDQWZTZ0F3SUJBZ0lSQUxEU24xYXhkU2I0bkYvSUNuMGpUZUl3RFFZSktvWklodmNOQVFFTEJRQXcKTHpFdE1Dc0dBMVVFQXhNa01UYzVPR0V4TnpNdFkyUmpNQzAwT0RnekxUZ3paV1l0T0RjME4yWTJORGRrTkdFdwpNQjRYRFRJd01ETXdOVEl3TVRFek9Wb1hEVEkxTURNd05ESXhNVEV6T1Zvd0x6RXRNQ3NHQTFVRUF4TWtNVGM1Ck9HRXhOek10WTJSak1DMDBPRGd6TFRnelpXWXRPRGMwTjJZMk5EZGtOR0V3TUlJQklqQU5CZ2txaGtpRzl3MEIKQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBa3ZSdkpxenBRTjQrbU9TeklBekhoeitnZCtHekJ3RDdWYzVZNkpkZwpRbFF3ZUx4Q0p4Z1NvdU1oWnJLZHlYWVI4SEVJbWtBS2svWEFCM3pnYnhIanprSEVJSDNtdjRiNkx6dnVOWnM5CnBETTgzbVNBTFRKd3cvMnhidENjYjJxa3lOVENhUy9JMnJKeVZTRzJ1ZzAzdFJhS002eVpmTGtrWnd6TUxUTVgKbHhRek5yVndkUGhvT2IxckJTMDJtRnVmYmhnd1FEa1Z5cTNpZFVVNGJHRUF0ZUZYM0tZZ3U3UnlEMktSc1ZTMgphWjdza0U3T3AvbUl4VmpKWXQrVnZTa2p1RHQvRWRXMjNNSC84RTJWdEdyWE5nT0J4bmtYVXAwNUpKV1VFSDEzCkJHajgxSkE3blIrc2Q0ZDZJU0RURHM2RXN4eDZ6QWdjaU5QclpHS3l3Y1p4U1FJREFRQUJveU13SVRBT0JnTlYKSFE4QkFmOEVCQU1DQWdRd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQQpQZ05uZDZpUTZlMzYzM3V1S0puODBKV2srN3BUZExHRHlIK2RsYkh6cWYvV3Fpa1g5K1R0S2dyYngxVzBSdzczClhXaXBmK2VURmpHeFZ2dGovK3o1MXhEQmlJSG1za1ZnWk84RnpJeHlVYzI1ckk1OTBqNW9COHFPdFJBeHk2c0MKaXVVc0tVTDR0a0hqOEszWjh5b01CakxkZkNKY2xVVjI3ZmJLZnVCYUU2dEZBTFZNMTMrMmJodThYc2ZhQ1ZyRQpDZUorYjZ5M3VSUHNkS1RvVmlLdDJBWUxzQ2kvTllma0Exd0VIL284cm1QMXozZDFzZWwyNlFkWm9CVCtnaUF6CjhiSlNTeXZXTStIa01TNEpnSFJBS1djdVJyNnp3dE9Pck1RVGsyMDloTlFyUjhkYzFhUVl6QlVsQ2k3K25TQzcKRTlHZUxsUVBpMEtMQnFTQUFmb2EvZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUQ4akNDQXRxZ0F3SUJBZ0lSQUpnalY1eGQ5SHRuVEtHVUQrclEwejB3RFFZSktvWklodmNOQVFFTEJRQXcKTHpFdE1Dc0dBMVVFQXhNa01UYzVPR0V4TnpNdFkyUmpNQzAwT0RnekxUZ3paV1l0T0RjME4yWTJORGRrTkdFdwpNQjRYRFRJd01EVXdNakF3TURBeU5Wb1hEVEkxTURVd01UQXdNREF5TlZvd0tERVhNQlVHQTFVRUNoTU9RMjlqCmEzSnZZV05vSUV4aFluTXhEVEFMQmdOVkJBTVRCSEp2YjNRd2dnSWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUMKRHdBd2dnSUtBb0lDQVFEVXkvQXc1WkR3QjQzWXdxNkY3bjJoTThLVndHR1RkUEVYaVBZaU10Q0l5aHh2QmVEOQpUTGJ1bjFjbnVTZ2I5YnB0dHhFSGpJTnF5TGhjOXYxY3F6dDY0NW5GWEhxci9xZVNjYzNWK3RQQm5GT1F6dnE4ClAwYnNwOTFYWGs0WHE0ejkvVDNoby95TGlTSUJVV1ZFT0s4UG5JckFmMGN5VC96aC9uakk2ZFNHbWh4NXh5cjYKS2xGUjBsZGF6RDN6WUdQVGxXS282aWxTUnBkMGp6YVJiU1hwekxRaHZwcHRRRUp1NEQxZU5aSzZLYlU2MTlzVwp5bzhMVjk3N3lheFZ2N2V1c29sWE93a3RmU2ZnOTBxZy9qcGN4d3hGQVoyTUxNYnh3blZOKzZhYjMveWhYMTJkClQ1NENVbzA0aXNwNHdrVHMvdFkxMHBnUGZqd1VQbi9rT2gwMjU0akhZQ0wyRGNYaUxHMjdRR1NaWjEya0s4UFoKUXZXL1ArWUVSM3R2NTRNdnd1bXNFSktTT1hHdEpkQ0ljTHZqUVZlM0RWZytyZkF3RTh0Y1gwUXo0Q2pPbStCawowcjNndFZBSDA0RnIwUU9UUFJLVjlzRDF0ZXk4NlkyeWFGS2ZmTkNsbzc1NHFFa3QvMTJFUTIvR2VDSm1EYXF5CkZTMytZRVBnUG9ueUNXak0wQnJEOENUTXBIam9RYkQvL1BwbS9BWG4ybzFlc25NVTZKTjM5MHlBUkwyOUJLOWcKNUg1TmVja0RVNThDcFhuaWJSZHYwRnJ2YXUvUE5iSGhSYm1Nd2wyaVFPZXpEQUZzODh1ajRlNVJLMDNRZVR6ZgpQbzFqd3FpbDcrMEtCbGoyamFETXFnZm8zVjl2Z05ldzBxbGJmak5hRkp5QWFScmlhcnZwZmovT2VRSURBUUFCCm94QXdEakFNQmdOVkhSTUJBZjhFQWpBQU1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQnU0dmNKQWRGZXhpancKcTNOdDNELzBSUWlSdGlhN0V0Nnd3S0JsZ3VTTy84WG5sdE5QZVNwMXVFdlNRcHNkd1lPSmtNcUFNeTBaSUJBSQowcFlrbkg0WUlEdjZCQnlYbXVHdTlPZmM5QTZlSWhxbDV4cDdFeXlkQnVWRDRzMXRZd1ZoSXZabUVGWko4RUduCk9xWTlzbnRCWmk3WDhyQlRlL0g5M2tvaDdDaWQ4ZXV4Y3BySHM5ZEkxSWRuSE52WU9RakhLa0NBZUJ0YWFMZFIKVDhabmZMUkR6aWdOS3dWK2pSU0NacTFDUXA0NHlIY3RuSThnZWVMTUJkT2cySWVmWlJSZU1zYlp1SlJRcDJKcwozcnA4Z1NLay9adnJOYW5tMVZZbDExYkFUVmEreXRIVXNRclU4ejZTdllKZmRKWGdHU0NuNTU0RU1wdzE2aHgvCkVYTEdLYTZ0Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS1FJQkFBS0NBZ0VBMU12d01PV1E4QWVOMk1LdWhlNTlvVFBDbGNCaGszVHhGNGoySWpMUWlNb2Nid1hnCi9VeTI3cDlYSjdrb0cvVzZiYmNSQjR5RGFzaTRYUGI5WEtzN2V1T1p4Vng2cS82bmtuSE4xZnJUd1p4VGtNNzYKdkQ5RzdLZmRWMTVPRjZ1TS9mMDk0YVA4aTRraUFWRmxSRGl2RDV5S3dIOUhNay84NGY1NHlPblVocG9jZWNjcQoraXBSVWRKWFdzdzk4MkJqMDVWaXFPb3BVa2FYZEk4MmtXMGw2Y3kwSWI2YWJVQkNidUE5WGpXU3VpbTFPdGZiCkZzcVBDMWZlKzhtc1ZiKzNycktKVnpzSkxYMG40UGRLb1A0NlhNY01SUUdkakN6RzhjSjFUZnVtbTkvOG9WOWQKblUrZUFsS05PSXJLZU1KRTdQN1dOZEtZRDM0OEZENS81RG9kTnVlSXgyQWk5ZzNGNGl4dHUwQmttV2RkcEN2RAoyVUwxdnovbUJFZDdiK2VETDhMcHJCQ1Nramx4clNYUWlIQzc0MEZYdHcxWVBxM3dNQlBMWEY5RU0rQW96cHZnClpOSzk0TFZRQjlPQmE5RURrejBTbGZiQTliWHN2T21Oc21oU24zelFwYU8rZUtoSkxmOWRoRU52eG5naVpnMnEKc2hVdC9tQkQ0RDZKOGdsb3pOQWF3L0FrektSNDZFR3cvL3o2WnZ3RjU5cU5Yckp6Rk9pVGQvZE1nRVM5dlFTdgpZT1IrVFhuSkExT2ZBcVY1NG0wWGI5QmE3MnJ2enpXeDRVVzVqTUpkb2tEbnN3d0JiUFBMbytIdVVTdE4wSGs4CjN6Nk5ZOEtvcGUvdENnWlk5bzJnektvSDZOMWZiNERYc05LcFczNHpXaFNjZ0drYTRtcTc2WDQvem5rQ0F3RUEKQVFLQ0FnRUFvMW9PZnlxckVXZHJIenVMaDZxbGJBcjAwOHBEM1ZOSEEvOFNtdndSRXdDN3hRcHBSV2tQZ0t4MgoxanFQcks3OHR0NXlSeTQ1Yjg2M29EM0dEczR2c2Mxb0xKWXFZVC95V1R2ZGUrYTVpWVc4ckl3RzlGMUt6NzZvCjdqbXBqd2dWQ3FETlVScDJjcE1KdEtOTUxvdW83ejRIVVhBak1sOHV6RGx4ZFNIekVJVGJXU3hvTkhRcHlyckMKYmlRZFptZlhHZ1F5SVdMbjU0M2pGQW9nSkpENktya0dpbVRyM1BRWVMwNytMUVRKSnZsL2NyVmpMT0svM2tCTgpIMUlZWmhidkpUOU9xTlRiM2J5VzBWNWtQcVFLSDFCNWZidVl1cE5oQVJONnd5dHNJWHBYVDNXS3dvanN6ZkdiCkVRMlNFaE5ubjlxY2krS204alhBWHZYL2JTNmpYeXhFeE1CcUpXaXk1UGlIaWZIK2hSUFcvdzBreW10Qm9YYmcKelRtMWpSckZEaGE3cGZHRkQrSy84SWNwRVFHRDliY0RVT25WK01td0oxcjBkVklJYXFsbU1qYkdUYWp4T0pPcQpTSS85NE14RGtWaWp2OGNxWThSS2VnR2s4NC9WVmVRT05rNlBkL2ZuaWUzbE5pR0orWWNxTUFhMXA0anFPNkkvCkdoVmRIanNCc2RudzNQM1dHTVMvUjlTUGlmOEl5TDQ2cHM5alE5QWtGcVZWYVpFYTM2MWVVZVM5SFJPQzZXcXgKL3FpYllUdE5ES2dwVDBHcDZtWEF0aTAyQThNSS8xVE9WYjUwL1NVL0FmWlF4L2xOTWFZQjBia3hYUlk5emVVUwpoajZVZklQWjBIdmk4ejUraVd2SkxQYkNCSkxnb1lhY3dTTUlodHBJcituWlJVdER1VVVDZ2dFQkFObzVSLzNnCjJQejllVEpXVlJ1MUhweGNTeTUrUnJGcGlvL3hHcFlTaWFRU1VVUnNBbUVXaFFyMHpYSkZ4RUJPZFhwQ2laZUEKSmxteXE3cFhtVFBBUTAvZWtoNnBRMU5ETWlqNHBmTWgrb3FnUGwrVUhpMzFUSzFLckt1YkNrRlRCU0g3Wmsycgo3MndVSy94eDA2ZGNYMW41UWlZQlY2c2hvN25CcnozSDFNL3ZDeUNGRUhmdkJ3WWRNQ2dndUlIYnFNU3l3b2tyCkpVdlljaGRFbkdnVkg0WkkvMHAyNDdXcWpRRldJa1Y1S2tURmNFL1d6d0xYTGJ5dTdBRytvQXNxWk0yTDVsMVgKSHMrcnpDbUxOUTZtcGJWMXZSUUphemtyb1dRVGlBUndHemNyRkthb2R5ZjRUMlFoaEdqUkV6L1RiSlZCSTVTVwp1eU92Y1FVZldnbDk2bzhDZ2dFQkFQbWlKcDVBdUYwbnlBb0N5YmFndk4yelFsMXJ0L0xsZ3VhZ2Nvd0tZcmtFCkpJb0RQOGxwSlR4em9HT1pEZDVTNXFsVnV6aTNScG5iYWlDbm03WDU2MXFZcHlGTVZuVlg2MVl0OHo2dFBoQWoKR0hra1pmMTRyVEFIQTRQUVhUR25oczdGSXB6TW9jWisvd3JtRjZPTTR2WlpiSy9nbW5zMzNSQUFMVjRMc1EwcQpOVDBVR2Q0NFJiNTZHdVBMeXNjbmhFN3R0eWZYSWZpVnZ6cmRXNlZXejU0Qm54Z1M2b01yZzdSN1BPRldmTTVICnc4RUI0UXB5LytrSDRYME5KOW9VMng3RUVzNjd6Rk5hdEpVM0N3WHFVTUF5RXNKYUFmdkZLSW05MEVJQ2tySFIKRE4zTVc2c0R4T0NYcVV5WWhKV1A1YjZGZmYyQXZHMmdieVBVdGpwbTJuY0NnZ0VBQzJsQlpYb3pmbzgybmpZNwpmeFpxZ2x5bEpjbytvaHBWdjQ4cEI3M3lhcHoybVBCWTg0Qzg5a1MwMVl2bVprSjBEQytjaUVxUU50S0wvbE9FClZGdHlhYVBHMmttWmxxb0YzblNhSU91ZThVN04xQ3VucEZtV1o5MW15QlowWTlRV2laOWV5eUw1Z3hwTzdvVjUKUHVBcXNFYkRlYjlLT1UycUJSV210MEZTMUlpNGVUdmNENWwxTVpHbktnSUVBKzVibGVXUEhLTWY4U1poV093aQpqYUxGSWoyQTlBRGhpV2RndGpndDFKb3dacVk0YUVSZ1VOSzF0bzhqRWpoSW9DellWcE5CT1pKTHJ5cFpvN1orCjBNUlFGL3dQSmhRVUFrcFF4eTNxUitrZzB6S3lnc0IrY3AyZWNTcjdoSXVpU1EwaU9XL05qNENPU3FCcTlZeWQKSmEvcTZ3S0NBUUE4L0pOb3VERVNlU1NTNVlsNE41N01udjNJcXdkZXJSbWsxSEFIcklYZjQ1WTFyWU9JNWtvMQprWjRPbHhiZlNPdVhWUjJQUnA5VitWZmRNSFdIS002SjdKOXdNQ0V6Tzg1LzJHd0QxUGxEb2Y5Wm9UM1ZoZ1R4CnBkVURBQVcwbXRRQmNnSDV3cmlITVFHSUhSeUxWV0VoaEVsY1VvZ0xNR091aEF5UlhGUGQvb0RSTWpiN3BrM0wKc2pNZGtlMHhhSU1YY1ZYOHdyOUc1dmE0SDlwQzg0bDNkYmZ6ZnJPU1pqQWdDTGVmNmF4R0RSeFM2KzJaeXV5ZwpkczlzNktqaXk1T1kyWmdxcjVERWtIVnJ1dTNUZlNKTFFqQjVFTnBKTXlxck5CZEwrU3J6akRvVGVkaXZXQlZpCk5Vc2tMbUs5MDFEeWtkUnMrV1dQZHRHUU5HaHNyaklUQW9JQkFRQ0ZiOTBSejZWUEQ2bENjVXEzSEtwS1Zrd1EKOEV4bmZRWXhDQmlubUt6VjUwOCt3T3ZoTis5bzBRc3l5cW1BUmUyTE1xSTJwRWtmSWNtNHpwQjcwUTNLQmN2WgpXUkViSjhiNi81dVZHa01OME82T1JlWHZnOXIzVUsrc095bWZlb1YrU3MzUTV1OGZvdXBRcEZMc0RsYkZTTzMvCmNtQnE0OU45ZnNRMHZEMzhibUFsVThUcE9XdGh6WEVSeXZiRFVnWVVBd1NoZkVDT1piYnJOVlhrajdsRDM1UDYKRHBEMkp1WVRrZlZvdTBleFgwMzQvcGxySTJFdjk3bE9Zc3IydllJaCtnSVdSV0VBM3lGTThDQVhUbU1GYXBJLwplczFJT1plRWU3Z1Q2dWJkQjQveTJtTlY1elNWd2FGU3U4cWlLSFI5U2o4aDlGZS96bjZuSGtvYTVzcVEKLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K
kind: Secret
metadata:
  name: crdb-root
type: Opaque

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/path: _status/vars
    prometheus.io/port: "8080"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/component: database
    app.kubernetes.io/instance: crdb
    app.kubernetes.io/managed-by: cockroach-operator
    app.kubernetes.io/name: cockroachdb
    app.kubernetes.io/part-of: cockroachdb
  name: crdb
spec:
  clusterIP: None
  ports:
  - name: grpc
    port: 26257
    protocol: TCP
    targetPort: 26257
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 8080
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/component: database
    app.kubernetes.io/instance: crdb
    app.kubernetes.io/name: cockroachdb
  sessionAffinity: None
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: database
    app.kubernetes.io/instance: crdb
    app.kubernetes.io/managed-by: cockroach-operator
    app.kubernetes.io/name: cockroachdb
    app.kubernetes.io/part-of: cockroachdb
  name: crdb-public
spec:
  clusterIP: '[some_ip]'
  ports:
  - name: grpc
    port: 26257
    protocol: TCP
    targetPort: 26257
  - name: http
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app.kubernetes.io/component: database
    app.kubernetes.io/instance: crdb
    app.kubernetes.io/name: cockroachdb
  sessionAffinity: None
  type: ClusterIP

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/component: database
    app.kubernetes.io/instance: crdb
    app.kubernetes.io/managed-by: cockroach-operator
    app.kubernetes.io/name: cockroachdb
    app.kubernetes.io/part-of: cockroachdb
  name: crdb
spec:
  podManagementPolicy: OrderedReady
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: database
      app.kubernetes.io/instance: crdb
      app.kubernetes.io/name: cockroachdb
  serviceName: crdb
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: database
        app.kubernetes.io/instance: crdb
        app.kubernetes.io/name: cockroachdb
    spec:
      containers:
      - args:
        - shell
        - -ecx
        - '>- exec /cockroach/cockroach start --join=crdb-0.crdb.[sandbox_namespace]:26257
          --advertise-host=$(hostname -f) --logtostderr=INFO --certs-dir=/cockroach/cockroach-certs/
          --http-port=8080 --port=26257 --cache=25% --max-sql-memory=25%'
        env:
        - name: COCKROACH_CHANNEL
          value: kubernetes-helm
        image: cockroachdb/cockroach:v19.2.6
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: http
            scheme: HTTPS
          initialDelaySeconds: 30
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 1
        name: db
        ports:
        - containerPort: 26257
          name: grpc
          protocol: TCP
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 2
          httpGet:
            path: /health?ready=1
            port: http
            scheme: HTTPS
          initialDelaySeconds: 10
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /cockroach/cockroach-data/
          name: datadir
        - mountPath: /cockroach/cockroach-certs/
          name: certs
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      serviceAccount: cockroach-database-sa
      serviceAccountName: cockroach-database-sa
      securityContext: {}
      terminationGracePeriodSeconds: 60
      volumes:
      - name: datadir
        persistentVolumeClaim:
          claimName: ""
      - name: certs
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: ca.crt
              - key: tls.crt
                path: node.crt
              - key: tls.key
                path: node.key
              name: crdb-node
          - secret:
              items:
              - key: tls.crt
                path: client.root.crt
              - key: tls.key
                path: client.root.key
              name: crdb-root
  updateStrategy:
    rollingUpdate:
      partition: 0
    type: RollingUpdate

