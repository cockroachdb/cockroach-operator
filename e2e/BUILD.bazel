load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "go_default_library",
    srcs = ["assert.go"],
    importpath = "github.com/cockroachdb/cockroach-operator/e2e",
    visibility = ["//visibility:public"],
    deps = [
        "//api/v1alpha1:go_default_library",
        "//pkg/database:go_default_library",
        "//pkg/kube:go_default_library",
        "//pkg/labels:go_default_library",
        "//pkg/resource:go_default_library",
        "//pkg/testutil:go_default_library",
        "//pkg/testutil/env:go_default_library",
        "@com_github_google_go_cmp//cmp:go_default_library",
        "@com_github_stretchr_testify//require:go_default_library",
        "@io_k8s_api//apps/v1:go_default_library",
        "@io_k8s_api//core/v1:go_default_library",
        "@io_k8s_apimachinery//pkg/api/errors:go_default_library",
        "@io_k8s_apimachinery//pkg/apis/meta/v1:go_default_library",
        "@io_k8s_apimachinery//pkg/util/wait:go_default_library",
    ],
)

go_test(
    name = "go_default_test",
    size = "enormous",
    srcs = ["e2e_test.go"],
    data = [
        "//config/crd/bases:crd_manifest",
        "//hack/bin:kind",
        "//hack/bin:etcd",
        "//hack/bin:kube-apiserver",
        "//hack/bin:kubectl",
        "//hack/bin:kubetest2",
        "//hack/bin:kubetest2-kind",
    ] + glob(["testdata/**"]),
    embed = [":go_default_library"],
    deps = [
        "//api/v1alpha1:go_default_library",
        "//pkg/actor:go_default_library",
        "//pkg/controller:go_default_library",
        "//pkg/testutil:go_default_library",
        "//pkg/testutil/env:go_default_library",
        "//pkg/testutil/exec:go_default_library",
        "//pkg/testutil/paths:go_default_library",
        "//pkg/utilfeature:go_default_library",
        "@com_github_go_logr_zapr//:go_default_library",
        "@com_github_stretchr_testify//require:go_default_library",
        "@io_k8s_apimachinery//pkg/runtime:go_default_library",
        "@org_uber_go_zap//zaptest:go_default_library",
    ],
)

filegroup(
    name = "package-srcs",
    srcs = glob(["**"]),
    tags = ["automanaged"],
    visibility = ["//visibility:private"],
)

filegroup(
    name = "all-srcs",
    srcs = [":package-srcs"],
    tags = ["automanaged"],
    visibility = ["//visibility:public"],
)
